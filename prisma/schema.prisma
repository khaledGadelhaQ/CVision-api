generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                  String          @id @default(cuid())
  firebaseUid         String          @unique
  email               String          @unique
  firstName           String?
  lastName            String?
  profileImage        String?
  university          String?
  major               String?
  careerGoals         String?
  onboardingCompleted Boolean         @default(false)
  createdAt           DateTime        @default(now())
  updatedAt           DateTime        @updatedAt
  roadmaps            CareerRoadmap[]
  cvs                 CV[]
  skills              UserSkill[]

  @@map("users")
}

model CV {
  id            String   @id @default(cuid())
  userId        String
  fileName      String
  originalName  String
  filePath      String
  isProcessed   Boolean  @default(false)
  extractedText String?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  user          User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("cvs")
}

model Skill {
  id          String      @id @default(cuid())
  name        String      @unique
  category    String
  description String?
  createdAt   DateTime    @default(now())
  userSkills  UserSkill[]

  @@map("skills")
}

model UserSkill {
  id        String     @id @default(cuid())
  userId    String
  skillId   String
  level     SkillLevel @default(BEGINNER)
  isFromCV  Boolean    @default(false)
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  skill     Skill      @relation(fields: [skillId], references: [id], onDelete: Cascade)
  user      User       @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([userId, skillId])
  @@map("user_skills")
}

model CareerRoadmap {
  id          String        @id @default(cuid())
  userId      String
  title       String
  targetRole  String
  description String?
  status      RoadmapStatus @default(ACTIVE)
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  user        User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  items       RoadmapItem[]

  @@map("career_roadmaps")
}

model RoadmapItem {
  id             String        @id @default(cuid())
  roadmapId      String
  title          String
  description    String?
  category       String
  priority       Int           @default(1)
  estimatedHours Int?
  isCompleted    Boolean       @default(false)
  order          Int
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @updatedAt
  roadmap        CareerRoadmap @relation(fields: [roadmapId], references: [id], onDelete: Cascade)

  @@map("roadmap_items")
}

enum SkillLevel {
  BEGINNER
  INTERMEDIATE
  ADVANCED
  EXPERT
}

enum RoadmapStatus {
  ACTIVE
  COMPLETED
  PAUSED
}
